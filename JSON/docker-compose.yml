networks:
  tcc:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
  monitoring:

volumes:
  prometheus-data:
  grafana-data:

services:
  telegraf:
    image: telegraf:1.30
    container_name: telegraf
    restart: unless-stopped
    networks: ["monitoring"]
    ports:
      - "9273:9273"
    volumes:
      - ./telegraf:/etc/telegraf:ro
    command: ["--config", "/etc/telegraf/telegraf.conf"]
    extra_hosts:
      - "host.docker.internal:host-gateway"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=15d"
      - "--web.enable-lifecycle"
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    restart: unless-stopped
    depends_on: ["telegraf"]
    networks: ["monitoring"]

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - TZ=America/Sao_Paulo
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on: ["prometheus"]
    networks: ["monitoring"]

  brands-api:
    build: ./CONTEXTOS/brands-api
    ports:
      - "8081:8080"
    networks:
      tcc:
        ipv4_address: 172.30.0.10
    dns:
      - 8.8.8.8
      - 8.8.4.4
    container_name: brands-api

  categories-api:
    build: ./CONTEXTOS/categories-api
    ports:
      - "8082:8080"
    networks:
      tcc:
        ipv4_address: 172.30.0.11
    dns:
      - 8.8.8.8
      - 8.8.4.4
    container_name: categories-api

  images-api:
    build: ./CONTEXTOS/images-api
    ports:
      - "8083:8080"
    networks:
      tcc:
        ipv4_address: 172.30.0.12
    dns:
      - 8.8.8.8
      - 8.8.4.4
    container_name: images-api

  products-api:
    build: ./CONTEXTOS/products-api
    ports:
      - "8084:8080"
    networks:
      tcc:
        ipv4_address: 172.30.0.13
    dns:
      - 8.8.8.8
      - 8.8.4.4
    container_name: products-api

  sellers-api:
    build: ./CONTEXTOS/sellers-api
    ports:
      - "8085:8080"
    networks:
      tcc:
        ipv4_address: 172.30.0.14
    dns:
      - 8.8.8.8
      - 8.8.4.4
    container_name: sellers-api

  bff:
    build: ./BFF
    ports:
      - "8080:8080"
    networks:
      tcc:
        ipv4_address: 172.30.0.15
    dns:
      - 8.8.8.8
      - 8.8.4.4
    depends_on:
      - brands-api
      - categories-api
      - images-api
      - products-api
      - sellers-api
    container_name: bff-api